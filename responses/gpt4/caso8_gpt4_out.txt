Configuración TLS híbrida en Nginx (TLS 1.2 + TLS 1.3) — Informe de auditoría
=============================================================================

1) Evaluación de las suites TLS 1.2 y política actual
-----------------------------------------------------
• Estado actual: `ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305';`
  – Correctas y seguras (AEAD modernas). Cubren ECDSA y RSA.
  – Recomendación: añadir `ECDHE-RSA-AES128-GCM-SHA256` y `ECDHE-ECDSA-AES128-GCM-SHA256` como fallback eficiente (128-bit GCM).
• `ssl_prefer_server_ciphers on;` (afecta a TLS 1.2): ✔️  Asegura preferencia del servidor sobre el cliente.
• Política sugerida TLS 1.2 (lista mínima razonable):
  `ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:`
  `ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:`
  `ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-CHACHA20-POLY1305`

2) Implicaciones TLS 1.3 (cifras AEAD implícitas) y compatibilidad
-------------------------------------------------------------------
• TLS 1.3 restringe por diseño a AEAD modernas: `TLS_AES_128_GCM_SHA256`, `TLS_AES_256_GCM_SHA384` y `TLS_CHACHA20_POLY1305_SHA256`.
• No es necesario listar ciphers para 1.3 (la directiva `ssl_ciphers` aplica a ≤ TLS 1.2). Opcionalmente,
  si la versión de Nginx/OpenSSL lo soporta, se puede declarar explícitamente:
  `ssl_ciphersuites TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256;`
• Compatibilidad: mantener 1.2 + 1.3 (“intermediate”) amplía cobertura a clientes modernos y enterprise legacy 1.2;
  “modern” (solo 1.3) maximiza seguridad/simplicidad, pero excluye agentes sin 1.3.

3) Revisión de parámetros adicionales
-------------------------------------
• Grupos ECDH: `ssl_ecdh_curve X25519:secp384r1;` ✔️  Recomendados (X25519 preferente).
• HSTS: cabecera sólida (`max-age=63072000; includeSubDomains; preload`) — verifique que **todo** el dominio y subdominios sirven HTTPS
  antes de activar *preload*.
• OCSP stapling: `ssl_stapling on; ssl_stapling_verify on;` ✔️  Correcto (monitorizar tiempos/errores de respuesta).
• Tickets: `ssl_session_tickets off;` ✔️  Reduce riesgos de reuso de claves de tickets; si se activan, gestionar rotación/TTL en KMS.
• Early Data: `ssl_early_data off;` ✔️  Evita riesgos de replay 0‑RTT.
• HTTP/2: ya activo por `listen 443 ssl http2;` — revisar ALPN (h2) en testssl.sh.

4) Variantes de configuración propuestas (Mozilla “modern” vs “intermediate”)
-----------------------------------------------------------------------------

• Variante MODERN (prioriza seguridad, solo TLS 1.3):
```nginx
ssl_protocols TLSv1.3;
# TLS 1.3 usa AEAD predeterminadas; opcional declarar si soportado:
# ssl_ciphersuites TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256;
ssl_session_tickets off;
ssl_stapling on;
ssl_stapling_verify on;
ssl_early_data off;
add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
# En TLS 1.3, ssl_ciphers/ssl_prefer_server_ciphers no aplican
```

• Variante INTERMEDIATE (compatibilidad amplia 1.2 + 1.3):
```nginx
ssl_protocols TLSv1.2 TLSv1.3;
ssl_prefer_server_ciphers on;  # afecta a TLS 1.2
ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:'
            'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:'
            'ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-CHACHA20-POLY1305';
# Opcional, si soportado: ssl_ciphersuites TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256;
ssl_session_tickets off;
ssl_stapling on;
ssl_stapling_verify on;
ssl_early_data off;
ssl_ecdh_curve X25519:secp384r1;
add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
```

5) Verificación con testssl.sh / sslscan
----------------------------------------
Comandos de prueba:
```bash
testssl.sh -p -S -U --color 0 https://example.org
sslscan --no-failed --tls12 --tls13 example.org:443
```
Campos a revisar:
• Versiones soportadas (TLS 1.2/1.3) y ausencia de TLS 1.0/1.1/SSLv3.
• Suites activas en 1.2 (solo AEAD) y negociación correcta en 1.3 (AEAD implícitas).
• ALPN/HTTP/2 y HSTS en cabeceras.
• OCSP stapling: ofrecido/verificado y tiempos de respuesta.
• Tickets: confirmación `off` (o política de rotación si `on`).

Resumen
-------
• La configuración aportada es sólida: AEAD modernas en 1.2, buenos grupos ECDH, HSTS fuerte, stapling verificado, sin 0‑RTT y sin tickets.
• Añadir fallback AES‑GCM de 128 bits mejora compatibilidad y rendimiento en 1.2.
• Elegir entre “modern” (solo 1.3) e “intermediate” (1.2+1.3) según tu matriz de clientes y requisitos de conformidad.
